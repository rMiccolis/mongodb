apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: mongodb
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      volumes:
      - name: mongodb-storage
        persistentVolumeClaim:
          claimName: mongodb-pvc
      - name: mongodb-tls-cert
        secret:
          secretName: tls-cert
      - name: mongodb-config-volume
        configMap:
          name: mongodb-config
# to cut start
      initContainers:
        - name: init-mongo-user
          image: mongo
          command:
            - sh
            - -c
            - |
              echo "Waiting for MongoDB to be ready...";
              until mongo --tls \
                          --tlsCAFile /etc/mongodb/tls/tls.crt \
                          --tlsCertificateKeyFile /etc/mongodb/tls/tls.crt \
                          --host localhost \
                          --eval "print('MongoDB is up')" &>/dev/null; do
                sleep 2
              done

              echo "Creating admin user...";
              mongo --tls \
                    --tlsCAFile /etc/mongodb/tls/tls.crt \
                    --tlsCertificateKeyFile /etc/mongodb/tls/tls.crt \
                    --host localhost \
                    --eval "db.getSiblingDB('admin').createUser({ user: '$MONGO_INITDB_ROOT_USERNAME', pwd: '$MONGO_INITDB_ROOT_PASSWORD', roles: [ { role: 'root', db: 'admin' } ] })"
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: MONGO-ROOT-USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: MONGO-ROOT-PASSWORD
          volumeMounts:
            - name: tls
              mountPath: /etc/mongodb/tls
# to cut end
      containers:
      - name: mongodb
        image: mongo
        command: ["mongod"]
        args: ["--config", "/etc/mongodb/config/mongod.conf"]
        resources:
          requests:
            memory: 256Mi
            cpu: 200m
          limits:
            memory: 256Mi
            cpu: 200m
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
           secretKeyRef:
             name: mongodb-secret
             key: MONGO-ROOT-USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
           secretKeyRef:
             name: mongodb-secret
             key: MONGO-ROOT-PASSWORD
        volumeMounts:
        - name: mongodb-storage
          mountPath: /data/db
        - name: mongodb-tls-cert
          mountPath: /etc/mongodb/tls
        - name: mongodb-config-volume
          mountPath: /etc/mongodb/config
          readOnly: true